version: '3.8'

services:
  api:
    container_name: api
    build:
      dockerfile: Dockerfile
      context: .
      target: develop
    labels:
      - "traefik.http.routers.api.rule=(Host(`web.localhost`) && PathPrefix(`/api`))"
    depends_on:
      - dev-db
      - traefik
    volumes:
      - ./:/app/
      - /app/node_modules/
      - /app/apps/api/node_modules/
    ports:
      - 6000:6000
    networks:
      - node-network

  web:
    container_name: web
    build:
      dockerfile: Dockerfile.web
      context: .
      target: develop
    labels:
      - "traefik.http.routers.web.rule=Host(`web.localhost`)"
    depends_on:
      - api
      - dev-db
      - traefik
    volumes:
      - ./:/app/
      - /app/node_modules/
      - /app/apps/web/node_modules/
      - /app/apps/web/.next
    ports:
      - 3000:3000
    networks:
      - node-network

  dev-db:
    container_name: dev-pg-container
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - node-network

  # proxy:
  #   restart: unless-stopped
  #   image: nginx
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - api
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #   networks:
  #     - node-network

  traefik:
    image: traefik:v2.9
    command: --api.insecure=true --providers.docker
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - node-network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    env_file:
      - ./.env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 5090:80
    networks:
      - node-network

networks:
  node-network: